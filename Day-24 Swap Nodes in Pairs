Swap Nodes in Pairs

Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes. Only nodes itself may be changed.

 

Example 1:


Input: head = [1,2,3,4]
Output: [2,1,4,3]
Example 2:

Input: head = []
Output: []
Example 3:

Input: head = [1]
Output: [1]
 

Constraints:

The number of nodes in the list is in the range [0, 100].
0 <= Node.val <= 100
C++	
1
​
2
​
3
class Solution {
4
public:
5
    ListNode* swapPairs(ListNode* head) {
6
        if(head == NULL or head->next == NULL){
7
            return head;
8
        }
9
        ListNode* temp = head->next;
10
        head->next = swapPairs(temp->next);
11
        temp->next = head;
12
        return temp;
13
    }
14
};
